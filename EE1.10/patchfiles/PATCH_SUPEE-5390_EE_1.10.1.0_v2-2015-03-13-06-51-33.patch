diff --git app/code/core/Enterprise/Logging/Block/Adminhtml/Grid/Filter/Ip.php app/code/core/Enterprise/Logging/Block/Adminhtml/Grid/Filter/Ip.php
index 2f9a7b5..c2dc4ba 100644
--- app/code/core/Enterprise/Logging/Block/Adminhtml/Grid/Filter/Ip.php
+++ app/code/core/Enterprise/Logging/Block/Adminhtml/Grid/Filter/Ip.php
@@ -26,6 +26,7 @@
 
 /**
  * Ip-address grid filter
+ * @deprecated since SUPEE-5390. See Replaced with Enterprise_Logging_Block_Adminhtml_Index_Grid::_ipFilterCallback
  */
 class Enterprise_Logging_Block_Adminhtml_Grid_Filter_Ip extends Mage_Adminhtml_Block_Widget_Grid_Column_Filter_Text
 {
diff --git app/code/core/Enterprise/Logging/Block/Adminhtml/Index/Grid.php app/code/core/Enterprise/Logging/Block/Adminhtml/Index/Grid.php
index 3880c08..75478cb 100644
--- app/code/core/Enterprise/Logging/Block/Adminhtml/Index/Grid.php
+++ app/code/core/Enterprise/Logging/Block/Adminhtml/Index/Grid.php
@@ -107,10 +107,10 @@ class Enterprise_Logging_Block_Adminhtml_Index_Grid extends Mage_Adminhtml_Block
             'header'    => Mage::helper('enterprise_logging')->__('IP Address'),
             'index'     => 'ip',
             'type'      => 'text',
-            'filter'    => 'enterprise_logging/adminhtml_grid_filter_ip',
             'renderer'  => 'adminhtml/widget_grid_column_renderer_ip',
             'sortable'  => false,
             'width'     => 125,
+            'filter_condition_callback' => array($this, '_ipFilterCallback'),
         ));
 
         $this->addColumn('user', array(
@@ -173,5 +173,16 @@ class Enterprise_Logging_Block_Adminhtml_Index_Grid extends Mage_Adminhtml_Block
         return $this;
     }
 
-
+    /**
+     * Add filter by ip
+     *
+     * @param Enterprise_Logging_Model_Mysql4_Event_Collection $collection
+     * @param Mage_Adminhtml_Block_Widget_Grid_Column $column
+     */
+    protected function _ipFilterCallback(
+        Enterprise_Logging_Model_Mysql4_Event_Collection $collection,
+        Mage_Adminhtml_Block_Widget_Grid_Column $column
+    ) {
+        $collection->addIpFilter($column->getFilter()->getValue());
+    }
 }
diff --git app/code/core/Enterprise/Logging/Model/Mysql4/Event/Collection.php app/code/core/Enterprise/Logging/Model/Mysql4/Event/Collection.php
index 05c4281..4a90b64 100644
--- app/code/core/Enterprise/Logging/Model/Mysql4/Event/Collection.php
+++ app/code/core/Enterprise/Logging/Model/Mysql4/Event/Collection.php
@@ -46,4 +46,19 @@ class Enterprise_Logging_Model_Mysql4_Event_Collection extends Mage_Core_Model_M
     {
         return parent::getSelectCountSql()->resetJoinLeft();
     }
+
+    /**
+     * Add IP filter to collection
+     *
+     * @param string $value
+     * @return Enterprise_Logging_Model_Mysql4_Event_Collection
+     */
+    public function addIpFilter($value)
+    {
+        if (preg_match('/^(\d+\.){3}\d+$/', $value)) {
+            return $this->addFieldToFilter('ip', ip2long($value));
+        }
+        $this->getSelect()->where('INET_NTOA(ip) LIKE ?', "%$value%");
+        return $this;
+    }
 }
diff --git app/code/core/Mage/Admin/Model/Observer.php app/code/core/Mage/Admin/Model/Observer.php
index 9379239..c39747f 100644
--- app/code/core/Mage/Admin/Model/Observer.php
+++ app/code/core/Mage/Admin/Model/Observer.php
@@ -37,6 +37,10 @@ class Mage_Admin_Model_Observer
     {
         $session  = Mage::getSingleton('admin/session');
         /* @var $session Mage_Admin_Model_Session */
+
+        /**
+         * @var $request Mage_Core_Controller_Request_Http
+         */
         $request = Mage::app()->getRequest();
         $user = $session->getUser();
 
@@ -44,7 +48,7 @@ class Mage_Admin_Model_Observer
             $request->setDispatched(true);
         }
         else {
-            if($user) {
+            if ($user) {
                 $user->reload();
             }
             if (!$user || !$user->getId()) {
@@ -55,14 +59,15 @@ class Mage_Admin_Model_Observer
                     $user = $session->login($username, $password, $request);
                     $request->setPost('login', null);
                 }
-                if (!$request->getParam('forwarded')) {
+                if (!$request->getInternallyForwarded()) {
+                    $request->setInternallyForwarded();
                     if ($request->getParam('isIframe')) {
                         $request->setParam('forwarded', true)
                             ->setControllerName('index')
                             ->setActionName('deniedIframe')
                             ->setDispatched(false);
                     }
-                    elseif($request->getParam('isAjax')) {
+                    elseif ($request->getParam('isAjax')) {
                         $request->setParam('forwarded', true)
                             ->setControllerName('index')
                             ->setActionName('deniedJson')
diff --git app/code/core/Mage/Core/Controller/Request/Http.php app/code/core/Mage/Core/Controller/Request/Http.php
index be8dc60..a86afdb 100644
--- app/code/core/Mage/Core/Controller/Request/Http.php
+++ app/code/core/Mage/Core/Controller/Request/Http.php
@@ -38,6 +38,13 @@ class Mage_Core_Controller_Request_Http extends Zend_Controller_Request_Http
     const DEFAULT_HTTP_PORT = 80;
 
     /**
+     * Flag for recognizing if request internally forwarded
+     *
+     * @var bool
+     */
+    protected $_internallyForwarded = false;
+
+    /**
      * ORIGINAL_PATH_INFO
      * @var string
      */
@@ -529,4 +536,26 @@ class Mage_Core_Controller_Request_Http extends Zend_Controller_Request_Http
         }
         return false;
     }
+
+    /**
+     * Define that request was forwarded internally
+     *
+     * @param boolean $flag
+     * @return Mage_Core_Controller_Request_Http
+     */
+    public function setInternallyForwarded($flag = true)
+    {
+        $this->_internallyForwarded = (bool)$flag;
+        return $this;
+    }
+
+    /**
+     * Checks if request was forwarded internally
+     *
+     * @return bool
+     */
+    public function getInternallyForwarded()
+    {
+        return $this->_internallyForwarded;
+    }
 }
diff --git lib/Varien/Data/Collection/Db.php lib/Varien/Data/Collection/Db.php
index d779f5b..b403c94 100644
--- lib/Varien/Data/Collection/Db.php
+++ lib/Varien/Data/Collection/Db.php
@@ -442,13 +442,6 @@ class Varien_Data_Collection_Db extends Varien_Data_Collection
 
         $sql = '';
         $fieldName = $this->_getConditionFieldName($fieldName);
-        if (is_array($condition) && isset($condition['field_expr'])) {
-            $fieldName = str_replace(
-                '#?',
-                $this->getConnection()->quoteIdentifier($fieldName),
-                $condition['field_expr']
-            );
-        }
         if (is_array($condition)) {
             if (isset($condition['from']) || isset($condition['to'])) {
                 if (isset($condition['from'])) {
