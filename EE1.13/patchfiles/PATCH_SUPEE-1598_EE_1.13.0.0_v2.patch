diff --git app/code/core/Enterprise/PageCache/Model/Config.php app/code/core/Enterprise/PageCache/Model/Config.php
index dee7fe4..bf94a83 100644
--- app/code/core/Enterprise/PageCache/Model/Config.php
+++ app/code/core/Enterprise/PageCache/Model/Config.php
@@ -117,7 +117,8 @@ class Enterprise_PageCache_Model_Config extends Varien_Simplexml_Config
 
             $placeholder = $placeholderData['code']
                 . ' container="' . $placeholderData['container'] . '"'
-                . ' block="' . get_class($block) . '"';
+                . ' block="' . get_class($block) . '"'
+                . ' cache_lifetime="' . $placeholderData['cache_lifetime'] . '"';
             $placeholder.= ' cache_id="' . $block->getCacheKey() . '"';
 
             if (!empty($placeholderData['cache_lifetime'])) {
diff --git app/code/core/Enterprise/PageCache/Model/Container/Abstract.php app/code/core/Enterprise/PageCache/Model/Container/Abstract.php
index c86d733..524ea11 100644
--- app/code/core/Enterprise/PageCache/Model/Container/Abstract.php
+++ app/code/core/Enterprise/PageCache/Model/Container/Abstract.php
@@ -189,7 +189,7 @@ abstract class Enterprise_PageCache_Model_Container_Abstract
         $tags[] = Enterprise_PageCache_Model_Processor::CACHE_TAG;
         $tags = array_merge($tags, $this->_getPlaceHolderBlock()->getCacheTags());
         if (is_null($lifetime)) {
-            $lifetime = $this->_placeholder->getAttribute('cache_lifetime') ?
+            $lifetime = $this->_placeholder->getAttribute('cache_lifetime') !== null ?
                 $this->_placeholder->getAttribute('cache_lifetime') : false;
         }
         Enterprise_PageCache_Helper_Data::prepareContentPlaceholders($data);
diff --git app/code/core/Enterprise/PageCache/Model/Observer.php app/code/core/Enterprise/PageCache/Model/Observer.php
index b34ccd3..1615330 100755
--- app/code/core/Enterprise/PageCache/Model/Observer.php
+++ app/code/core/Enterprise/PageCache/Model/Observer.php
@@ -38,6 +38,16 @@ class Enterprise_PageCache_Model_Observer
      */
     const XML_PATH_DESIGN_EXCEPTION = 'design/package/ua_regexp';
 
+    /*
+     * Theme types exceptions involved into cache key
+     */
+    protected $_themeExceptionTypes = array(
+        'template',
+        'skin',
+        'layout',
+        'default'
+    );
+
     /**
      * Page Cache Processor
      *
@@ -143,12 +153,25 @@ class Enterprise_PageCache_Model_Observer
         if (!$this->isCacheEnabled()) {
             return $this;
         }
-        $cacheId = Enterprise_PageCache_Model_Processor::DESIGN_EXCEPTION_KEY;
 
-        if (!Enterprise_PageCache_Model_Cache::getCacheInstance()->getFrontend()->test($cacheId)) {
-            $exception = Mage::getStoreConfig(self::XML_PATH_DESIGN_EXCEPTION);
-            Enterprise_PageCache_Model_Cache::getCacheInstance()
-                ->save($exception, $cacheId, array(Enterprise_PageCache_Model_Processor::CACHE_TAG));
+        $cacheId = Enterprise_PageCache_Model_Processor::DESIGN_EXCEPTION_KEY;
+        $storeIdentifier = isset($_COOKIE[Mage_Core_Model_Store::COOKIE_NAME]) ?
+        $_COOKIE[Mage_Core_Model_Store::COOKIE_NAME] :
+        Mage::app()->getRequest()->getHttpHost() . Mage::app()->getRequest()->getBaseUrl();
+
+        $exceptions = Enterprise_PageCache_Model_Cache::getCacheInstance()->load($cacheId);
+        $exceptions = $exceptions === false ? array() : (array)@unserialize($exceptions);
+        if (!isset ($exceptions[$storeIdentifier])) {
+            $exceptions[$storeIdentifier][self::XML_PATH_DESIGN_EXCEPTION] = Mage::getStoreConfig(
+                self::XML_PATH_DESIGN_EXCEPTION
+            );
+            foreach ($this->_themeExceptionTypes as $type) {
+                $configPath = sprintf('design/theme/%s_ua_regexp', $type);
+                $exceptions[$storeIdentifier][$configPath] = Mage::getStoreConfig($configPath);
+            }
+            Enterprise_PageCache_Model_Cache::getCacheInstance()->save(serialize($exceptions), $cacheId,
+                array(Enterprise_PageCache_Model_Processor::CACHE_TAG)
+            );
             $this->_processor->refreshRequestIds();
         }
         return $this;
@@ -687,10 +710,8 @@ class Enterprise_PageCache_Model_Observer
      */
     public function registerDesignExceptionsChange(Varien_Event_Observer $observer)
     {
-        $object = $observer->getDataObject();
         Enterprise_PageCache_Model_Cache::getCacheInstance()
-            ->save($object->getValue(), Enterprise_PageCache_Model_Processor::DESIGN_EXCEPTION_KEY,
-                array(Enterprise_PageCache_Model_Processor::CACHE_TAG));
+            ->remove(Enterprise_PageCache_Model_Processor::DESIGN_EXCEPTION_KEY);
         return $this;
     }
 
diff --git app/code/core/Enterprise/PageCache/Model/Processor.php app/code/core/Enterprise/PageCache/Model/Processor.php
index 411206d..d60e628 100644
--- app/code/core/Enterprise/PageCache/Model/Processor.php
+++ app/code/core/Enterprise/PageCache/Model/Processor.php
@@ -124,8 +124,8 @@ class Enterprise_PageCache_Model_Processor
          * Define COOKIE state
          */
         if ($uri) {
-            if (isset($_COOKIE['store'])) {
-                $uri = $uri.'_'.$_COOKIE['store'];
+            if (isset($_COOKIE[Mage_Core_Model_Store::COOKIE_NAME])) {
+                $uri = $uri.'_'.$_COOKIE[Mage_Core_Model_Store::COOKIE_NAME];
             }
             if (isset($_COOKIE['currency'])) {
                 $uri = $uri.'_'.$_COOKIE['currency'];
@@ -188,11 +188,24 @@ class Enterprise_PageCache_Model_Processor
             return false;
         }
 
-        $rules = @unserialize($exceptions);
-        if (empty($rules)) {
+        $exceptions      = (array)@unserialize($exceptions);
+        $storeIdentifier = isset($_COOKIE[Mage_Core_Model_Store::COOKIE_NAME]) ?
+                            $_COOKIE[Mage_Core_Model_Store::COOKIE_NAME] :
+                            Mage::app()->getRequest()->getHttpHost() . Mage::app()->getRequest()->getBaseUrl();
+        if (!isset($exceptions[$storeIdentifier])) {
             return false;
         }
-        return Mage_Core_Model_Design_Package::getPackageByUserAgent($rules);
+
+        $keys = array();
+        foreach ($exceptions[$storeIdentifier] as $type => $exception) {
+            $rule = (array)@unserialize($exception);
+            if (empty($rule)) {
+                $keys[] = '';
+            } else {
+                $keys[] = Mage_Core_Model_Design_Package::getPackageByUserAgent($rule, $type);
+            }
+        }
+        return implode($keys, "|");
     }
 
     /**
diff --git app/code/core/Mage/Core/etc/system.xml app/code/core/Mage/Core/etc/system.xml
index 9488a64..97169bd 100644
--- app/code/core/Mage/Core/etc/system.xml
+++ app/code/core/Mage/Core/etc/system.xml
@@ -327,7 +327,7 @@
                         <template_ua_regexp translate="comment">
                             <label></label>
                             <frontend_model>adminhtml/system_config_form_field_regexceptions</frontend_model>
-                            <backend_model>adminhtml/system_config_backend_serialized_array</backend_model>
+                            <backend_model>adminhtml/system_config_backend_design_exception</backend_model>
                             <sort_order>25</sort_order>
                             <show_in_default>1</show_in_default>
                             <show_in_website>1</show_in_website>
@@ -345,7 +345,7 @@
                         <skin_ua_regexp translate="comment">
                             <label></label>
                             <frontend_model>adminhtml/system_config_form_field_regexceptions</frontend_model>
-                            <backend_model>adminhtml/system_config_backend_serialized_array</backend_model>
+                            <backend_model>adminhtml/system_config_backend_design_exception</backend_model>
                             <sort_order>35</sort_order>
                             <show_in_default>1</show_in_default>
                             <show_in_website>1</show_in_website>
@@ -362,7 +362,7 @@
                         <layout_ua_regexp translate="comment">
                             <label></label>
                             <frontend_model>adminhtml/system_config_form_field_regexceptions</frontend_model>
-                            <backend_model>adminhtml/system_config_backend_serialized_array</backend_model>
+                            <backend_model>adminhtml/system_config_backend_design_exception</backend_model>
                             <sort_order>55</sort_order>
                             <show_in_default>1</show_in_default>
                             <show_in_website>1</show_in_website>
@@ -379,7 +379,7 @@
                         <default_ua_regexp translate="comment">
                             <label></label>
                             <frontend_model>adminhtml/system_config_form_field_regexceptions</frontend_model>
-                            <backend_model>adminhtml/system_config_backend_serialized_array</backend_model>
+                            <backend_model>adminhtml/system_config_backend_design_exception</backend_model>
                             <sort_order>65</sort_order>
                             <show_in_default>1</show_in_default>
                             <show_in_website>1</show_in_website>
